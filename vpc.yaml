AWSTemplateFormatVersion: 2010-09-09
Description: 
  VPC with public and private subnets, Internet Gateway, and NAT Gateway for access to the internet.

Parameters:
  VPCCidr:
    Description: CIDR block for the VPC
    Type: String
    Default: 10.0.0.0/16
  PublicSubnetCidr:
    Description: CIDR block for the public subnet
    Type: String
    Default: 10.0.1.0/24
  PrivateSubnetCidr:
    Description: CIDR block for the private subnet
    Type: String
    Default: 10.0.2.0/24
  AvailabilityZone1:
    Description: Availability Zone for the subnets
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1a
  AvailabilityZone2:
    Description: Availability Zone for the subnets
    Type: AWS::EC2::AvailabilityZone::Name
    Default: us-east-1b

Resources:
  # VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: MyVPC

  # Internet Gateway
  MyInternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags:
        - Key: Name
          Value: MyInternetGateway

  # Attach the Internet Gateway to the VPC
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  # Public Subnet
  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PublicSubnetCidr
      MapPublicIpOnLaunch: true
      AvailabilityZone: !Ref AvailabilityZone1
      Tags:
        - Key: Name
          Value: PublicSubnet

  # Private Subnet
  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: !Ref PrivateSubnetCidr
      AvailabilityZone: !Ref AvailabilityZone2
      Tags:
        - Key: Name
          Value: PrivateSubnet

  # Public Route Table
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: PublicRouteTable

  # Route for Internet Gateway (public access)
  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: AttachGateway
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  # Associate Public Subnet with Public Route Table
  PublicSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  # # NAT Gateway for Private Subnet access to the internet
  # MyNatGatewayEIP:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: vpc

  # MyNatGateway:
  #   Type: AWS::EC2::NatGateway
  #   Properties:
  #     SubnetId: !Ref PublicSubnet
  #     AllocationId: !GetAtt MyNatGatewayEIP.AllocationId
  #     Tags:
  #       - Key: Name
  #         Value: MyNatGateway

  # # Private Route Table
  # PrivateRouteTable:
  #   Type: AWS::EC2::RouteTable
  #   Properties:
  #     VpcId: !Ref MyVPC
  #     Tags:
  #       - Key: Name
  #         Value: PrivateRouteTable

  # # Route for NAT Gateway (Private Subnet access to the internet)
  # PrivateRoute:
  #   Type: AWS::EC2::Route
  #   Properties:
  #     RouteTableId: !Ref PrivateRouteTable
  #     DestinationCidrBlock: 0.0.0.0/0
  #     NatGatewayId: !Ref MyNatGateway

  # # Associate Private Subnet with Private Route Table
  # PrivateSubnetRouteTableAssociation:
  #   Type: AWS::EC2::SubnetRouteTableAssociation
  #   Properties:
  #     SubnetId: !Ref PrivateSubnet
  #     RouteTableId: !Ref PrivateRouteTable

Outputs:
  VPCID:
    Description: VPC ID
    Value: !Ref MyVPC
    Export:
      Name: !Sub "${AWS::StackName}-VPCID"

  PublicSubnetID:
    Description: Public Subnet ID
    Value: !Ref PublicSubnet
    Export:
      Name: !Sub "${AWS::StackName}-PUBLIC-SUBNET"

  PrivateSubnetID:
    Description: Private Subnet ID
    Value: !Ref PrivateSubnet
    Export:
      Name: !Sub "${AWS::StackName}-PRIVATE-SUBNET"
