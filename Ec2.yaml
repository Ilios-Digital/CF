AWSTemplateFormatVersion: 2010-09-09
Description: 
  Sample template to provision an EC2 Instance with public IP, Elastic IP (EIP), and root EBS volume.

Parameters:
  VPCStackName:
    Description: Name of the VPC stack
    Type: String
    Default: vpc
  
  KeyPairName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: Must be the name of an existing EC2 KeyPair.
    Default: test
  
  InstanceType:
    Description: EC2 instance type
    Type: String
    Default: t3.micro
    
  InstanceImageId:
    Description: EC2 Image ID for the region
    Type: AWS::EC2::Image::Id
    Default: ami-0866a3c8686eaeeba # Defaults to Amazon Linux in us-east-1 region

Resources:
  mySG:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Enable HTTP (80) and SSH (22) access
      GroupName: WebServer-SG
      VpcId: 
        Fn::ImportValue: !Sub "${VPCStackName}-VPCID" # Reference VPC ID from VPC Stack
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0 # Open to all IPs for HTTP
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0 # Open to all IPs for demo purposes, restrict for production
      Tags: 
        - Key: Name
          Value: demo-sg
        - Key: Application
          Value: 
            Ref: "AWS::StackName"
  
  SGBaseIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref mySG
      IpProtocol: '-1' # All traffic
      FromPort: '-1'
      ToPort: '-1'
      SourceSecurityGroupId: !Ref mySG

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref InstanceImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPairName
      SubnetId: 
        Fn::ImportValue: !Sub "${VPCStackName}-PublicSubnetID" # Corrected reference
      SecurityGroupIds:
        - !Ref mySG
      Tags:
        - Key: Name
          Value: !Sub "${VPCStackName}-Instance"
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          yum install -y httpd
          systemctl start httpd
          systemctl enable httpd
          echo "<h1>Hello from $(hostname -f)</h1>" > /var/www/html/index.html

Outputs:
  PublicInstanceID:
    Description: EC2 Instance ID
    Value: !Ref MyEC2Instance

  PublicInstanceIP:
    Description: Public IP of the instance
    Value: !GetAtt MyEC2Instance.PublicIp
